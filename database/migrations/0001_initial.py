# Generated by Django 2.1.5 on 2019-04-10 19:45

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContactList',
            fields=[
                ('contact_list_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('contact_names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=128, null=True), size=None)),
                ('memberships', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=20, null=True), size=None)),
                ('sent_event_invites', django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(blank=True, null=True), size=None)),
                ('received_event_invites', django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(blank=True, null=True), size=None)),
                ('sent_friend_requests', django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(blank=True, null=True), size=None)),
                ('received_friend_requests', django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(blank=True, null=True), size=None)),
                ('sent_group_requests', django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(blank=True, null=True), size=None)),
                ('received_group_requests', django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(blank=True, null=True), size=None)),
            ],
            options={
                'db_table': 'Contact_List',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.CharField(max_length=300, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('participating_users', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=128, null=True), size=None)),
                ('event_admins', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), size=None)),
                ('whitelist', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), size=None)),
                ('blacklist', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), size=None)),
                ('start_date', models.BigIntegerField()),
                ('end_date', models.BigIntegerField()),
            ],
            options={
                'db_table': 'Event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_name', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('group_admin', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), size=None)),
                ('group_members', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), size=None)),
                ('incoming_requests', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=128, null=True), size=None)),
                ('outgoing_requests', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=128, null=True), size=None)),
                ('group_desc', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('invite_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('time_sent', models.BigIntegerField()),
            ],
            options={
                'db_table': 'Invite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('alias', models.CharField(max_length=20)),
                ('phone_num', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=11, null=True), size=None)),
                ('last_name', models.CharField(max_length=20)),
                ('first_name', models.CharField(max_length=20)),
                ('email', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50, null=True), size=None)),
                ('birth_date', models.BigIntegerField()),
                ('firebase_id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('organization', models.CharField(blank=True, max_length=255, null=True)),
                ('user_desc', models.TextField(blank=True, null=True)),
                ('user_events', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=300, null=True), size=None)),
            ],
            options={
                'db_table': 'Profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventInvite',
            fields=[
                ('invite_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='database.Invite')),
                ('invited_users', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=128, null=True), size=None)),
            ],
            options={
                'db_table': 'Event_Invite',
                'managed': False,
            },
            bases=('database.invite',),
        ),
        migrations.CreateModel(
            name='GroupInvite',
            fields=[
                ('invite_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='database.Invite')),
                ('invitee_list', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=128, null=True), size=None)),
            ],
            options={
                'db_table': 'Group_Invite',
                'managed': False,
            },
            bases=('database.invite',),
        ),
        migrations.CreateModel(
            name='RepeatEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='database.Event')),
                ('rep_event_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('rep_type', models.CharField(max_length=7)),
                ('start_time', models.BigIntegerField()),
                ('end_time', models.BigIntegerField()),
                ('week_arr', models.CharField(max_length=7)),
            ],
            options={
                'db_table': 'Repeat_Event',
                'managed': False,
            },
            bases=('database.event',),
        ),
        migrations.CreateModel(
            name='UserRequest',
            fields=[
                ('invite_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='database.Invite')),
                ('sender_id', models.CharField(max_length=128)),
                ('receiver_id', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'User_Request',
                'managed': False,
            },
            bases=('database.invite',),
        ),
    ]
